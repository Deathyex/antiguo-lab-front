{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(fb, loginService, router, toastr) {\n    this.fb = fb;\n    this.loginService = loginService;\n    this.router = router;\n    this.toastr = toastr;\n  }\n  ngOnInit() {\n    this.loginForm = this.initForm();\n    this.toastr.success('Hello world!', 'Toastr fun!');\n  }\n  initForm() {\n    return this.fb.group({\n      email: ['', [Validators.email, Validators.required]],\n      contraseña: ['', [Validators.required]]\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      this.loginService.login(this.loginForm.value).subscribe(respuesta => {\n        if (respuesta) {\n          localStorage.setItem('token', respuesta.token);\n          this.router.navigate(['/laboratorio/examenes']);\n          localStorage.setItem(\"role\", respuesta.user.role);\n        }\n      }, error => {\n        console.error('Error en la solicitud:', error); // Manejo de errores, imprime en caso de que ocurra algún error\n      });\n    }\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,EAAc,EAASC,YAAwB,EAASC,MAAc,EAAUC,MAAqB;IAArG,OAAE,GAAFH,EAAE;IAAqB,iBAAY,GAAZC,YAAY;IAAqB,WAAM,GAANC,MAAM;IAAkB,WAAM,GAANC,MAAM;EAAmB;EAE7HC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAC,IAAI,CAACC,QAAQ,EAAE;IAC9B,IAAI,CAACH,MAAM,CAACI,OAAO,CAAC,cAAc,EAAE,aAAa,CAAC;EAEpD;EACAD,QAAQ;IACN,OAAO,IAAI,CAACN,EAAE,CAACQ,KAAK,CAAC;MACnBC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACZ,UAAU,CAACY,KAAK,EAACZ,UAAU,CAACa,QAAQ,CAAC,CAAC;MACjDC,UAAU,EAAC,CAAC,EAAE,EAAC,CAACd,UAAU,CAACa,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,KAAK;IACH,IAAG,IAAI,CAACP,SAAS,CAACQ,KAAK,EAAC;MAC1B,IAAI,CAACZ,YAAY,CAACW,KAAK,CAAC,IAAI,CAACP,SAAS,CAACS,KAAK,CAAC,CAACC,SAAS,CACpDC,SAAa,IAAG;QACjB,IAAGA,SAAS,EAAC;UACZC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACF,SAAS,CAACG,KAAK,CAAC;UAC7C,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;UAC/CH,YAAY,CAACC,OAAO,CAAC,MAAM,EAACF,SAAS,CAACK,IAAI,CAACC,IAAI,CAAC;;MAGjD,CAAC,EACAC,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC,CAAC;MAClD,CAAC,CACF;;EAGD;CAED;;AApCYzB,cAAc,eAL1BF,SAAS,CAAC;EACT6B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW7B,cAAc,CAoC1B;SApCYA,cAAc","names":["Component","Validators","LoginComponent","constructor","fb","loginService","router","toastr","ngOnInit","loginForm","initForm","success","group","email","required","contraseña","login","valid","value","subscribe","respuesta","localStorage","setItem","token","navigate","user","role","error","console","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\Git\\proyecto-lab-clinico\\src\\app\\auth\\pages\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm!:FormGroup;\n  constructor(private fb:FormBuilder,private loginService:AuthService,private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.loginForm=this.initForm();\n    this.toastr.success('Hello world!', 'Toastr fun!');\n\n  }\n  initForm(){\n    return this.fb.group({\n      email:['',[Validators.email,Validators.required]],\n      contraseña:['',[Validators.required]]\n    })\n  }\n\n  login(){\n    if(this.loginForm.valid){\n  this.loginService.login(this.loginForm.value).subscribe(\n    (respuesta:any)=>{\n    if(respuesta){\n     localStorage.setItem('token',respuesta.token)\n     this.router.navigate(['/laboratorio/examenes'])\n     localStorage.setItem(\"role\",respuesta.user.role)\n\n    }\n    },\n    (error) => {\n      console.error('Error en la solicitud:', error); // Manejo de errores, imprime en caso de que ocurra algún error\n    }\n  );\n\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}